==================================
 Import using user defined fields
==================================

User defined fields are importable like other fields.

Set up
======

Register the postal address entity as utility so postal addresses can
have user defined fields:

>>> import icemac.addressbook.address
>>> import zope.component
>>> zope.component.provideUtility(
...    icemac.addressbook.address.postal_address_entity,
...    name=u'icemac.addressbook.address.PostalAddress')

Create an address book and a browser to access it. Log in as `Administrator`:

>>> from icemac.addressbook.testing import create_addressbook
>>> from zope.testbrowser.testing import Browser
>>> ab = create_addressbook()
>>> browser = Browser()
>>> browser.addHeader('Authorization', 'Basic mgr:mgrpw')
>>> browser.open('http://localhost/++skin++AddressBook/ab')

Create some user defined fields:

>>> browser.getLink('Master data').click()
>>> browser.getLink('Edit entities').click()
>>> browser.getLink('Edit fields', index=2).click()
>>> browser.url
'http://lo.../ab/++attribute++entities/icemac.addressbook.address.PostalAddress'
>>> browser.getLink('field').click()
>>> browser.url
'http://localhost/.../icemac.addressbook.address.PostalAddress/@@addField.html'

A choice field:

>>> browser.getControl('type').displayValue = ['choice']
>>> browser.getControl('title').value = 'state'
>>> browser.getControl(name='form.widgets.values.buttons.add').click()
>>> browser.getControl(name='form.widgets.values.0').value = 'Sachsen'
>>> browser.getControl(name='form.widgets.values.buttons.add').click()
>>> browser.getControl(name='form.widgets.values.1').value = 'Sachsen-Anhalt'
>>> browser.getControl(name='form.widgets.values.buttons.add').click()
>>> browser.getControl(name='form.widgets.values.2').value = 'Brandenburg'
>>> browser.getControl(name='form.buttons.add').click()
>>> browser.url
'http://lo.../ab/++attribute++entities/icemac.addressbook.address.PostalAddress'

A number field:

>>> browser.getLink('field').click()
>>> browser.getControl('type').displayValue = ['integer']
>>> browser.getControl('title').value = 'number of letters'
>>> browser.getControl(name='form.buttons.add').click()
>>> browser.url
'http://lo.../ab/++attribute++entities/icemac.addressbook.address.PostalAddress'

Create two import files, one with errors and one without errors:

>>> from StringIO import StringIO
>>> error_data = StringIO()
>>> error_data.write(
...     'last_name,states,numbers\n'
...     'wrong statename,Berlin,1\n'
...     'wrong number,Berlin,asd\n'
...     'wrong number 2,Berlin,1.3\n'
...     'no statename,,1\n'
...     'no number,Sachsen,\n')
>>> error_data.seek(0)

>>> fine_data = StringIO()
>>> fine_data.write(
...     'last_name,states,numbers\n'
...     'Utzer,Sachsen-Anhalt,3\n')
>>> fine_data.seek(0)


Import with failing constraints
===============================

The first import file has data which lets some constraints fail:

>>> browser.getLink('Master data').click()
>>> browser.getLink('Import data').click()
>>> browser.getLink('file').click()
>>> browser.getControl('file').add_file(error_data, 'text/plain', 'fail.csv')
>>> browser.getControl('Add').click()
>>> browser.getLink('Import', index=0).click()
>>> browser.url
'http://localhost/++skin++AddressBook/ab/++attribute++importer/File/@@import'

The user chooses the reader as usual and maps the fields:

>>> browser.handleErrors = False
>>> browser.getControl('Next').click()
>>> print browser.url
http://localhost/++skin++AddressBook/ab/++attribute++importer/File/import/map
>>> browser.getControl('last name').displayValue = [
...     'last_name (wrong statename, wrong number, wrong number 2)']
>>> browser.getControl('state').displayValue = [
...     'states (Berlin, Berlin, Berlin)']
>>> browser.getControl('number of letters').displayValue = [
...     'numbers (1, asd, 1.3)']
>>> browser.getControl('Next').click()

The review step shows the error messages:

>>> print browser.url
http://localhost/.../ab/++attribute++importer/File/import/review
>>> print browser.contents




Tear down
=========

>>> zope.component.getGlobalSiteManager().unregisterUtility(
...    icemac.addressbook.address.postal_address_entity,
...    name=u'icemac.addressbook.address.PostalAddress')
True
